name: College Notice Monitor

on:
  schedule:
    # Run every 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache Python virtual environment
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-venv-python3.9-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-python3.9-
    
    - name: Install dependencies
      run: |
        if [ ! -d "venv" ]; then
          echo "Creating virtual environment and installing dependencies"
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          echo "Virtual environment created and dependencies installed"
        else
          echo "Using cached virtual environment"
        fi
        
        # Activate virtual environment for subsequent steps
        source venv/bin/activate
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
    
    - name: Load notice cache
      uses: actions/cache@v3
      with:
        path: |
          notice_cache.json
          error_cache.json
        key: notice-cache-${{ github.run_id }}
        restore-keys: |
          notice-cache-
    
    - name: Check for existing cache files
      run: |
        echo "Checking cache files..."
        if [ -f notice_cache.json ]; then
          echo "Found existing notice_cache.json"
          ls -la notice_cache.json
        else
          echo "No notice_cache.json found, will create new one"
        fi
        
        if [ -f error_cache.json ]; then
          echo "Found existing error_cache.json"
          ls -la error_cache.json
        else
          echo "No error_cache.json found, will create new one if needed"
        fi
    
    - name: Run notice monitor
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: python monitor.py
    
    - name: Check for changes and commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if files exist and add them only if they do
        files_to_add=""
        
        if [ -f notice_cache.json ]; then
          files_to_add="$files_to_add notice_cache.json"
          echo "Will add notice_cache.json"
        fi
        
        if [ -f error_cache.json ]; then
          files_to_add="$files_to_add error_cache.json"
          echo "Will add error_cache.json"
        fi
        
        if [ -n "$files_to_add" ]; then
          echo "Adding files: $files_to_add"
          git add $files_to_add
          
          # Check if there are any staged changes
          if ! git diff --staged --quiet; then
            git commit -m "Update cache files - $(date '+%Y-%m-%d %H:%M:%S')"
            git push
            echo "Cache files updated and pushed"
          else
            echo "No changes to commit"
          fi
        else
          echo "No cache files to add"
        fi
