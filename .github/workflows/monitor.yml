name: College Notice Monitor

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
    
    # Use a FIXED cache key instead of run_id to prevent cache bloat
    - name: Load cache files
      uses: actions/cache@v3
      with:
        path: |
          notice_cache.json
          error_cache.json
        key: notice-cache-fixed-v1
        restore-keys: |
          notice-cache-fixed-v1
    
    - name: Run notice monitor
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: python monitor.py
    
    - name: Commit cache changes only when needed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if cache files exist and have changes
        files_to_add=""
        has_changes=false
        
        if [ -f notice_cache.json ]; then
          files_to_add="$files_to_add notice_cache.json"
          if git diff --name-only notice_cache.json | grep -q notice_cache.json; then
            has_changes=true
            echo "notice_cache.json has changes"
          fi
        fi
        
        if [ -f error_cache.json ]; then
          files_to_add="$files_to_add error_cache.json"
          if git diff --name-only error_cache.json | grep -q error_cache.json; then
            has_changes=true
            echo "error_cache.json has changes"
          fi
        fi
        
        # Only commit if there are actual changes
        if [ -n "$files_to_add" ] && [ "$has_changes" = true ]; then
          git add $files_to_add
          git commit -m "Update cache files - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "Cache files updated and pushed"
        else
          echo "No changes to cache files, skipping commit"
        fi
